#Task 1

#Write a function called oops that explicitly raises an IndexError exception when called.
#Then write another function that calls oops inside a try/except state­ment to catch the error.
#What happens if you change oops to raise KeyError instead of IndexError?

def oops():
    qw= IndexError
    raise qw #this function raises IndexError 

def catch_error():
    try: 
        oops()
    except:
        print('Index error is caught')
 
print (catch_error()) 
# if we make oops raise KeyError
#def oops():
#    qwerty=KeyError
#    raise qwerty
#then our catch_error function will catch KeyError 

#Task 2

#Write a function that takes in two numbers from the user via input(), 
#call the numbers a and b, and then 
#returns the value of squared a divided by b, construct a try-except block 
#which raises an exception if the two values given by the input function were not numbers, 
#and if value b was zero (cannot divide by zero).    
  
def square_div():
    try:
        a = float(input("Please enter a number for a: "))
        b = float(input("Please enter a number for b: "))
        if b == 0:
            raise ZeroDivisionError("Division by zero is prohibited")
        result = (a ** 2) / b
        return result
    except ValueError:
        print("Invalid input. These values are not acceptable. Both entered values must be numbers.")
    except ZeroDivisionError as m:
        print(m)

result = square_divide()
if result is not None:
    print(f"The result is: {result}")

# приклад застосування функції умова if result is not none потрібна на випадок, якщо b не нуль і не спрацювало Виключення, тобто функція повертає результат у випадку коли немає zerodiverror

