#Task 1

#Write a function called oops that explicitly raises an IndexError exception when called.
#Then write another function that calls oops inside a try/except stateÂ­ment to catch the error.
#What happens if you change oops to raise KeyError instead of IndexError?

def oops():
    try: 
        x=[4]
        x[4]
    except IndexError:
        return 'Index is out of range'
        
print(oops())

def oops1():
    try:
        b= {2: 7}
        b[3]
    except KeyError:
        return 'Key is out of range'
print (oops1())

def catch_error():
    try: 
        oops()
    except IndexError:
        return 'index is out of range'
 
print (catch_error()) 

#Task 2

#Write a function that takes in two numbers from the user via input(), 
#call the numbers a and b, and then 
#returns the value of squared a divided by b, construct a try-except block 
#which raises an exception if the two values given by the input function were not numbers, 
#and if value b was zero (cannot divide by zero).    

def square_div(a,b):
    a = input('please enter a number: ')
    b = input('please enter a number: ')
   
    try : 
          x = a**2/b
       if type(a) = str and type(b) = str:
            raise exception TypeError:
       print ('wrong data type. Please, enter a number')
    try : 
          x = a**2/b
      if b == 0 : 
          raise exception ZeroDivisionError:
print('Division by zero is prohibited')
